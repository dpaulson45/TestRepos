# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

name: Demo Azure Pipelines
trigger:
  branches:
    include:
      - master
      - release

pool:
  vmImage: 'windows-2019'

steps:
- script: echo Hello, world!
  displayName: 'Run a one-line script'

- pwsh: |
    cd .\.build
    .\CodeFormatter.ps1
  displayName: "Code Formatting Script"

- pwsh: |
    cd .\.build
    .\Build.ps1
  displayName: "Build Script"

- pwsh: |
    Get-Content dist\ScriptVersions.txt
  displayName: "Display Script Versions file"

- pwsh: |
    $tag = "v$((Get-Date).ToString(`"yy.MM.dd.HHmm`"))"
    Write-Host "##vso[task.setvariable variable=ReleaseTagValue]$tag"


- task: GitHubRelease@0
  displayName: 'Create GitHub Release - Draft'
  condition: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'), eq(variables['Build.SourceBranch'], 'refs/heads/release'))
  inputs:
    gitHubConnection: github.com_dpaulson45
    repositoryName: dpaulson45/TestRepos
    action: create
    tagSource: manual
    tagPattern: 'v[0-9].[0-9].[0-9].[0-9]'
    tag: $(ReleaseTagValue)
    title: $(ReleaseTagValue)
    releaseNotesSource: 'file'
    releaseNotesFile: dist\ScriptVersions.txt
    addChangeLog: true
    assets: |
      dist\*.ps1
      dist\*.nse
    isDraft: true

- task: GitHubRelease@0
  displayName: 'Create GitHub Release - Release'
  condition: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'), eq(variables['Build.SourceBranch'], 'refs/heads/release'))
  inputs:
    gitHubConnection: github.com_dpaulson45
    repositoryName: dpaulson45/TestRepos
    action: Edit
    tagSource: manual
    tagPattern: 'v[0-9].[0-9].[0-9].[0-9]'
    tag: $(ReleaseTagValue)
    title: $(ReleaseTagValue)
    releaseNotesSource: 'file'
    releaseNotesFile: dist\ScriptVersions.txt
    addChangeLog: true
    assets: |
      dist\*.ps1
      dist\*.nse
    isDraft: false