#Dump-StoreWorkerOnPerformanceCounter 
[CmdletBinding()]
param(
[Parameter(Mandatory=$false)][string]$DumpFolder,
[Parameter(Mandatory=$false)][string]$ProcdumpBinary,
[Parameter(Mandatory=$false)][string]$DumpType,
[Parameter(Mandatory=$false)][array]$ActiveDatabaseNames,
[Parameter(Mandatory=$false)][int]$PIDRefreshInterval,
[Parameter(Mandatory=$false)][int]$SleepMilliseconds,
[Parameter(Mandatory=$false)][bool]$ScriptDebug
)

$scriptVersion = 0.1

$display = @"

    Monitor on Event Log v{0}

    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING
    BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
    NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
    DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
    OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

"@ -f $scriptVersion

########################
#
# Template Functions
#
########################

# Template Master: https://raw.githubusercontent.com/dpaulson45/PublicPowerShellScripts/master/Functions/Get-CounterFullNameToCounterObjectName/Get-CounterFullNameToCounterObjectName.ps1
Function Get-CounterSampleToCounterObjectName {
[CmdletBinding()]
param(
[Parameter(Mandatory=$true)][string]$FullCounterName
)
    
#Function Version 1.0
$counterObject = New-Object -TypeName pscustomobject 

#\\adt-e2k13aio1\logicaldisk(harddiskvolume1)\avg. disk sec/read
$endOfServerIndex = $FullCounterName.IndexOf("\",2) #\\adt-e2k13aio1 <> \logicaldisk(harddiskvolume1)\avg. disk sec/read
$startOfCounterIndex = $FullCounterName.LastIndexOf("\") + 1 #\\adt-e2k13aio1\logicaldisk(harddiskvolume1)\ <> avg. disk sec/read
$endOfCounterObjectIndex = $FullCounterName.IndexOf("(") 
if($endOfCounterObjectIndex -eq -1){$endOfCounterObjectIndex = $startOfCounterIndex - 1}
if(($FullCounterName.Contains("(")) -and ($FullCounterName.Contains("#")))
{
    $instanceName = ($FullCounterName.Substring($endOfCounterObjectIndex + 1, ($FullCounterName.IndexOf(")") - $endOfCounterObjectIndex - 1)))
}
else 
{
    $instanceName = ($PerformanceCounterSample.InstanceName)
}
$counterObj | Add-Member -MemberType NoteProperty -Name "FullName" -Value $FullCounterName
$counterObj | Add-Member -MemberType NoteProperty -Name "ServerName" -Value ($FullCounterName.Substring(2,($endOfServerIndex - 2)))
$counterObj | Add-Member -MemberType NoteProperty -Name "ObjectName" -Value ($FullCounterName.Substring($endOfServerIndex + 1, $endOfCounterObjectIndex - $endOfServerIndex - 1))
$counterObj | Add-Member -MemberType NoteProperty -Name "InstanceName" -Value $instanceName
$counterObj | Add-Member -MemberType NoteProperty -Name "CounterName" -Value ($FullCounterName.Substring($startOfCounterIndex))

return $counterObj

}
# End Function Get-CounterFullNameToCounterObjectName



########################
#
# End Template Functions
#
########################

########################
#
# Script Functions
#
########################


####### Check for Parameter Issues ##########

